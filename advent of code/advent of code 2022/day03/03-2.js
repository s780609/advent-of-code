const puzzleInput =
  "gfWpjRRQffQGCHHJsGqjsj\nSclzJZZvmmnPbJtVSqqNBqVCBdSCsd\ntlbvZJDZtmtPcJmlPnhMFQWWpMRFTfLDRRTWRp\nHjMPgSWjVrjgbHRRSSMRgjRdpdbGdlcdCvQfcCdlwQJfdf\nLNDnhtNtLNFFZDtFnhzvdldDflvvDCdlJfldpJ\nZFLFZZmFtFtTNTSPRrVPWWMpRP\nqLBSBLRwmgzqCbzCffDlrfCV\nTFFFHNWFMFFMpHpGHMTHGNhrldWZCsdZsslZlZfrflDVss\nPTMcPGntTThHhTGctnMvSwjjvmmqLBmnjqqgCR\nnClJtMwwntqVVPJcgZqq\nmjpsDcrcSSFFPZqFBWWgVP\nvQcjsvhrvvrmhbmNHMNnlHbNMtCtNM\nbgvvhnTQtjrrrhsDDf\npLSMltLzLLSjFrSSjrSJHD\nzNWRLBdZPllPQtCvttgCqb\nDRlDrrFTNDNlgzsGTBfcnqhhcnJfcrCSqc\nMMmmdWtdLmvtldHjMmQfPBqSJWnfCCCqcWSSPJ\nvjHMjLmjpLtHptQLmHvwTRgNVVpTzZFZgZRlsVTN\nrzpMpDCGFCFFjRFsRPFRNFPv\nfWclbHCHtSmfvjnmfsvZ\nwTcTlSwwtQtWclBQBLGMLMCLVzVLwJGqLd\nMQSjLNjPPLLSBPjfQhSPHjDVCjDtVVpDHwbwVpbD\nRcmWzsRrzZrmTszWRqWlmRJscbtHwCbndCtcDVddDpdnVnbt\nJTsrGGTqmwTlWmTzJzWmhhPLLGgPFgBffSSPhFFM\nqMMRNZMDDNWLPqfzCgDcGncVDCgG\nwwBFhwhhBgmcVzhghG\ntbJbjjtJvwtdtwjpFtlbvtdTLNSMqNqMMgqNHPlZRTNggL\nqmjMHsZmZSbjbZMjSLFFFFwgsgvFswpwww\nhRJBhmnhhvFFwhcv\nllfWDWzrzBNTRfNBrWzzTmZbGTMjPqMmZPjVbSZGSP\nCRRPLwwcclcGVppQ\nSHFjDjjHDTfSDNTTHfSHjQVGrpmllQQWltVVVZGp\nHFlqzDTfqlzwbgPJLwCP\nWRCNLphpLppSCWVHNfLRzVnQMnBnMddPMQDFQgrhPQFM\njTjJqvqjvPVJFJFBJF\nqTsZbvGqqZlstsmZVljtwqwSHHNWczHSSRcWNSRHzzNfbW\nglgzDzHjSrVHcVgbrjmNsscNGmNWssGNNtst\nhHPQLHJpwdLpdHfQQtnZmNMwnZGZWwsFZM\nQpdhPJRTJfPphJfhCBlVqVvgvVDBbvVqDbHD\nVtHzjZpjVtHrprgGmjHsGHNdSJFQRcLJqCdQcSqJNpcq\nbBWfTPwhbfDlMnhffRwQJQNdqJcLFQLSdR\nbhBhvfMWTnlDnTBfPSmvmjsjmmGtzHtsHm\npcRPRPWrSDcJGZSStmwZZS\nVnLfCfTlfVzfnMMBCqVNZJdtjNtJjhJdGNNbwT\nBLvqCCMVsnRQsPQgDcZH\ncQbqqQhDGhlQfQlhQrqGsTNgLgCpRgLTPPPLNbpg\nwtHVddVFwSHznZwwznCpRBdjppNBNTTdCjRR\nZtWFwWtSmvVnwZDrCMGfQlDDJQmD\nPzPZGCZzrZrlhdjdCqfCsqQdRD\ncbvZLVVFvbbNSNFHSDnsDQdnfqNQDRngsR\nFJHSLSFSScJJbWHFmFVFSZmrrzBmhtBwmzBMPMPzPh\nnlpFcLBgcVcLbssGVBGGrlpGPhJJJJJqPBZPDNMQMJJhJQZZ\nSSTjHzfHwtZSPVQVQMRQ\nTzVHwWfTtzwdVzsbFnGgsbdcGrLc\nFppVBRVZDdLmrDGmmfrQ\nNtNMPNshJCzznLGJSrqRrRrr\ntRssthhPlCWhPzsWtzhzCbVVjwTpVwdZZTpwjbdBbwBc\nTTWblHWScvPCCHTWFzSrqqsNNSmdmqrrpz\nRLRwjjnjZNprzmmZcq\nQQgtQnccQDGjgLDRRcLthQhFBvCbMtMHTWlBFllBbFCMTW\nWnBVNvDnVsNvZWdrWDLVDMbsHpTjpHCSSClsbSCCMH\nGPFtmztzgPhRFtJTdbTwjppSCjpgSl\nhJcfPtQhdtWNVZqNnqNQ\nGLcqZPPsnqQcFsmBBrqRvrddNqrC\nMtHthJwLllwvjRvvtrvBRS\nVHMfDLbpfznszZQG\nWBSdPlQPRfBtGQPfBGPBJgzgjwsJzsszJwCrdwCT\nZpppVpMVpnVHMVVbZRJrCgwRzTJrwNJw\nMvhmnpLqLmhVmBlftRQBFSlR\nhhQlSJqhtCSnqZJnqShSlNDwRzpvdwRlMBMMdcjRjMpMRc\nfrrGmLmWbfFrsmFHmBzBvBcwdJbvpjzbMM\nmmgFrVGLWJLFGsgfhSVtVPqntqnnSStN\nSFJTJTSqswwFQbwf\ncDtcWPclrtPwVsfssQmN\nHDtwWCgWdggdzSGJMSzGMq\nJpqJtWRJMhCMJpMQCWtFrjgHdgdlgllwNjlQjldH\nfBzPZcZvnBmDnZvZBZDmPvglVVVdgHHSwrNRgVgwNPRH\nGbZnZccfvcsZmccsmnnZTRbCCMWFTWJqFCCMJFRT\nvrrFqrFTBTmLmNrLMqMTHddJbHpWnhdWdWbHhJGM\nwBzfwzcQSzWSSshpdWGp\ngwjPPPDQtzQlzQDPqTgLBRmRqZBvqFNR\nbWVptFFsbPcZsGLhsZGmLB\nqnWrnrHdMCDCNqfWmvRRZSSRLdRGZGRG\nnNqqNDfMrMWHDQNHzWfHNDnwzblpzFlbwtFbVVlwVcPJpP\nBHJhlHdJQggvddglJBBhglhQzZHPZpFFPDMzFDDRDFZZDFZD\nrSTfqnCffMfCVfCLNqbzbjWNDbbWDPFpPFbP\nnfnnrSfCTVSwrqSLCGfTGlgQhlvsGMJQJBhhssJhGc\ntBjjDjjqfDjLfJlrLgglvmrlmrcc\nTwNNTVhwwpgvGSNNSssS\nTbwhnvvChhbVRTPPRJBJQQfJttMQQJCQfW\nmWSvSQVgmWQsQvspQJlrlLnJLLpCClhhlp\nbFHRjZdNjjBZzFzhtnCllCcJLrCBll\nHFFNHbdZZLZjfPFjHVQmWDDVsvsmTqVqDf\nJJPllQQClqgBCgdHwHbpjVTwHd\ntmGZtjGjHZpVbfMT\nShGjNGWmDSNcNRtGmshDRzzCvzQJJRBLrvlrBPJv\ncTpqsTWqVVpsNLfvCDFlMFDVFL\nJnndJPddQgzHlvMJFDhLCG\nBjtntgdRnQgzjdBRQBlpNWrTTlNTSwNpWS\nqHmqLVLjmVqsDBLtmjmbtPwCTwwPzGWRgGwGwMwW\nZhcCNCSprRTWTwSnWW\nhflhZvvQhppZfcNpvrhpQHjVjLmbVmmVHVCFDvqVFb\nnnNrwDnZrspwDNnZsNSDsNbCmpjvMTPQjLMmPmmQPGBTQP\nFdVtRdRfctBQPmTtTLQB\nqhzWVWJqVHwbhlLSsS\nhtWmhDhFztnztDhtBmBtghPRSrpfjVwPdfPwpwnRSVrr\ncbCHvgJGcTqbqcbqqqcqsMsRVrSCwffdRPPpVpwCRSwfjj\nGlgGQqTqbgQzttmBNNFz\nNWQNQgdTgjQNddTZfrCQWRDnnnbqnLqnRcjJlqqvDj\nFtSSmSmJhpllcclDvpln\nJBVVSsSFBVBttShFGSPQfCGNdrMfZZTQTZNNdC\nHgHthMhphcbfbMMfHhsGGDCRRVlcVSScsCRz\nnWvPFqLqPNdjnNLnjdJnPdWjGlssDPSsllVCRzlTCTGlSDzS\nRvddJRJQHwQwpZZb\ngdZwgpjZZQtHTdrWrwdpWRnlhNBRlLbFthNhflhBnL\nCVzDCPGMVqVmGsGGbJCmCDvMcRcqnBFFFnRBBNRBBNqhnFfF\nDsmSGsGPzvMGJvdbgTSTbjbSSdgH\njBGmbNBQGdBNNDJNQRLLVDsHtDRzHHZZcH\nwCWPFWPCrPhPrplvprhwpCHHtszttqZslRVHLtzVlJZL\nvprMMvMnJCwnnPShNGSTfGSfNmmgdNff\nbPtLbvVWWztbLSVVnbszpzQsrcDDBdpRcDrs\nllZmgCZqgCFgmdRdJcscBdJsmQ\nFZlgfqCFfgZHlqCMCglwCFGWntLLSMRSPGPVttWRtVGL\nvtnDsDtrnrSvrMVmbrrJgPCmBm\nFpQHzFclLVzWHhwHLQLlHLzPmMBQCJTdTmCTmBTJTTmgQg\npllcVWqlffZqZtZD\nTSSZWpsQmZWcTZSvsTTTppNPzrBPrNBrzQNVFrBBNPqP\nCgjmCbtGgftMmLtLmffzBzJJJNVVMNzNBqJrFN\ngjgjLgtLwgbGjHdhhGdvmlnllnpWnplZvcvwTl\nhtLrRFRtbbhlGSLRtbJBJsjBmgMMgJgtmBzz\npZQWddQQfpZZffcDQZwddQwDMqDDsPgGJJzzjqzgJMBJgmms\nQdcQTdwpGNwfrCRlRVlNLSbb\nwrdvpVBVpMGPPjWjGZJJZT\ntChCSlNfCCHtvHHWPHPZ\nRbRRNvmcqcblfMwwdVBQQqqdpL\nqcctqRcqmcHWzHBdDMZhfwthBnwt\nJFsSNMSgNSNJJMGJBBdjhFDfhwhBrwnZ\nTbgbsSgJMTJllblLCSPlsTCVQmRVVWpQzzqpqzVzHLQzcc\nCVcWbjjSSCSSnpjWpCpprhHZlHtHGzHrZrHGclrl\ngqZqdddLgmgNqvTGGHvvmrrGHT\nFFDgZfZNLMgNfdDqDRnsnjBpbSbnMBBWpQpB\nqwpQFwRnqFFfSBSfFt\nLJJLGLWWtZlbgWHgGshhSdSVzmhHmfVzzC\nlrbrbrNNJgDMLLbblGctvvvDqPcqctTTTcqP\nvnblvbfHvlcHMlHlZbSPLTPLwCMBRRPRRFFR\ntszzBqtzDsWVPRSmzLVmVL\ntsNsDDNgGsqBrgBpgdHQbfhflcHdpZvdbh\ncCpLtpGGLsgsppcpmGGHMtjfHRVhvvVVFRfhjV\nNWnnnNNndQnQZdCdzzRVMHzvhhHWWWjj\nCPJJrnSZpGDJLGTL\ncnJzpcnmnQVFbzTlvTHBlb\ntWCDPjfsDGfZhddhjjdTvFTgFgvbnFHvdHqT\nhjfCjwDDGjPthsfhsnGNrJcQcRmJMLVJrJNMLw\nCPPRrSlRccPcwTHwfdwTHdfl\nmLQLLjhQhhQLZvpzssHDhdTswzzTJD\ngmjbBvQLWmgbQZBCSRnnnSMVCBHnBS\nsWrBJbsVqschzhQzHh\ngtFmztnSlSfdlmnZSdSwcwGRTjcTcwwTcHccRg\nFzFDzMZCdDZtCSrJVBMqWVrqNBqN\nTvWlhhfhZJVgtSSl\nddBdGGdFmmBbdzqqPDDGGmdDZSgttHtZppSgzZHSgMhtMgtz\nPGqdrbbbdPnrcjjhTRWLLc\ntrrmJWcrVwVbcPScdcBdGPHH\nJTQnfjlJTpQFfMLlNJHHGDPdGsSdDjHGDPPH\nffFfnCTTCfTlplTMvNVzqWvwVzrrhwmWhJbW\nhVtDtgcghzJpmmhlwp\nsrsnrqqsPqsBPvnqRBRMPbnwlplpmCStJwmzJPtJzJfwSw\nbbrqjBbvGsjGGBWqMVFFVDNVNjZjgtgFgZ\nmnmhBDHhwWCHsTgRsH\ndcSlFvccMFMMFFggNsTzzvvzWnVW\nllQdllZScFplJPpdcZSqBqjhmtnrwrDGnQGhrq\nZffVNgfTdmPVltsnnGwgQDnB\nrMCFLMHpzCMFzHpzbrcHFLzBwsDsDDnlDBJrDDBBSJSnBn\nMLMjMzqpCzvwqTmwZdvq\nDDNlWPRqgPRPsRFjJQZbchJZbgQJ\nzzrLLznpLbHnjcBHvVvHvJcZ\nndmrTzbMMTfzrTfnTLrzdpmsPPPqlqGDNNsPCRDRqRsD\nzzdqTNfTfdfhgQhgqMFSjRDtDRWHqtWlwtqDRS\nssBCrcmpVGZvVRDdSDRwtmWdDb\nrvGPCZLCVCPVBZFdnfThgNgLJNhf\nbslcrssQwDPbQrrcsbsnQrjMLthPMMRhLRhLRgzmgPhRgM\nDffvDfHGfNFdpfTdMtghLBThzVmBhBtM\nSNvJNJdflDDbcDWJ\nHFlHNpWsTlGWbFsGFTGHFLLNzPPhLVPMzVzMNPhhzP\njSvZtmrqqpcrCpPVzw\ndddQvqDgDmjdSQQdqZjStpffWGgBRWTGfGsRlWBlHF\nTHnTbNrdBnLTHHnTnBrWRTndsccZsLZcDqmLDPcDlQDsmmsZ\nptwzzhpvGSVdqQlmszqmqPqc\nwGVjSddCBggCHFWN\nLFFbdbhhhvwvfTNdRhhRRvMbHDGjcfcGfDjtDHHcHqGjDqqj\nWlQnVpWSSWWsPsgDqDzHDLHjJcttGP\nrrWsZrgVnWrWSlmSlmSBFFbvTThhBFvvZLBhRw\nBgBdcjThvjFcTggrqvVfzlnnPlrqLt\nJpwJGPsQwpwSssHpPLlzlnNlzLLNNLVtsN\nJPMmWGmWPmHbHpJbWGJmDmwbBTRZMBBdZCRTRjFjhCZCCBTT\nBjbcLFRfBRhnbGjCVVvPllpcPtcDmdlPpvPP\nWrMQqCNgsqWWsTNCMZMWWsWPvJDJDddvlpDtZDpDDDDwvP\nqNMzzSzSQsGLbFCSCnVR\ntTRpHJQpQBZcddhhMhvhJN\nzswljflgMFbwPqmNmSdvShLNfLhm\nqFbsMCVgsqMwRWHCWDDBDWpt\nVSTCCWsJvGpHHCNC\nGrqzZrrZjDljcDDlfjMqgRPfPvQPpBHNvHvBpvNQ\nrljncDcznjMqhlhZDnltrzhTsGWtbVLFTTWGsbdWJdFTmL\nmJPDSJJPZPJNrprSNrDmpZGrhFFhBqjGbGGVbFjhhfqBjBRV\ncgnTQHdMQdTHdhqfggBhVqVfVS\nnQdLLddssSJrmsNvZrPz\njfjffQzZQQMzZZfZZQFgjDWBCRlCBdTTBGGGRpBCgdhdBG\nLrstWtNsbHLsprRBdlGpCwlh\nHLnntbnscqLvvPNNfMWSSmDMDPjzjDzS\nvhcGwWVvglltcfBn\nBBSLrzSJLzJNJrLfPfPRsmDRmflD\njMjFZJNMqzrzZzFNFjNQqJzbCpBBvWdpvTCWhpVwdvHVCGbG\nHlrnFmRmtRBQPVBTQHHQ\npsSLJsLpTTdPdLTv\nfCGgTgfSSCtRtFFzql\npfTpStppcDlWfbpDdzQRsQGJhfffQgJHzN\nZFZFZmBFwVwBVmLmLsRLRhHNzRLRNNzJ\nFnnjwVPmnqqqjBjrTdblldCTpcPJtbTD\nbdZHdWlrjslMMwGG\nrDDTRBTqSqmJLBJRBTSJpmMsMMjhwvfMhjjfVGsLshhC\nBqQFRPFRQBJgzrcZNHFdZt\nwrDdLlDdPWZPTTrwlZpSsPsHVHsSCHnbzMHM\nJtNFttNCjFvpppnMpJgSVS\nNFFqFcCQCvfrZmGdZdmqrW\nGMNNfJnNddJFJWsv\nHSDwCmmghLmwmmHDpsvdFpMWpppptSbp\nzCzBCgzhwmhzLrPnVrMqZBNfGf\nDrHGtbltbCjjjffPrgsmzmcqsgDczdsmgJ\nVZLwQLZLLVwLBQZnLVphhLQQqsTNmzJdcNTzzmJNqlNBsszz\nwZLhVMplpQVRRlpVGPfjCjMGCrbHGWWb\nBHpFrHHbBNTWWTWNhCPwPLNPjCdjLV\nzJRRzJvZlcZsSMJdzSDjDtfDCtDtjDjjjj\ndcJcszQJJGRJzRllMpGHpFTWmrTmBTbWWB\nqnWWqhDhnjmjCMBlNRrfVfRNCB\nvvBLBtGHJTHBddrNVJrVSVdr\nBZLTHbgvHvTFBgTFFvhmWmmZDPmmZDsnqncs\nWBvmjDbSzTMmHHdpNHNF\nttlflZRfGtfWVRltGtflCdHnJrNJHNHnJddNMNCnpF\nVVwssWQQfRGZcszBQzDbjSBvSBDP\nlSlQqQVqWWVWfqQWVJSTscdmPPwwTTmjjfpjPp\nFCbzHbvHvtgrtFCvbvbbwdTwmsrwnTTpmdswmwcc\nDtZbHdghztlLMQlWWhVQ\npqzzFSmdFqbQvlpdDGGrGBWPPBVNQnVttZ\ncgcjwfBMhHCjjLMCrtcnPcsnsPGVnrVs\nJgCChjjjBHhRRLLjjhplzvzpSFJvzzlDbSqm\nmZzVQZMhmrffwfQhWhzmrmpBtRcdbnbcdcMpBbDbncdD\njsLTSlTWRBSDpnDn\nGLTsGWGFsfmJGZVJZm\nBGWshBGnsFWSLWBLlSSLWRJHnrVPrPcNHCNHctnPPJ\nQmvQCqqMTZqvgmvTjpZCMgMtrVctPptHtrNVrptbJJbrRP\nCzjCZfCwDzShDWdF\nHmQlQHmJnpmptmzt\nMTqMjMPvTvVvhpdztZnSwzwZqS\nCcbLLPTMtCCsjHNHQFLRRFlRNN\nGDFwLLLLSrbdPlFBMFsslFHmZH\nTnJCgthHpVTfZMQZQmzWnZ\nhjvtjtghtqJvVjhTgNhJTvdvdDDRbbccrwPdcGwrHS\nMQQMBPzMGQBPBbDQPMhpnRwsGnRhNrFFpRnF\nvmgHcmCTTlvvvZvTmqcTfmCRdddFnwdRdnVwFpVfpRnwNw\ngvmqJTcHclCQJNzjMLWbLj\nDbqqDDbQFqfNtZSLSq\nRrdjPdmrpWBdmWRdccfLtNttSDMZBfftLMLf\ndCcgmgRrWcgcppjCVVVVFHFnDnbJnb\nfZMFfrtVdZSDVwTgjRMLhwTCLj\ncNzPBNpclllzHbmTNRhqCRTgjC\nnhhWJzhGPlQcGvsvfJtSfZfrtt\nPSzrBWQBBGzBlnSnWtDrqHfNfwVwHcLNjHjwcDNmFH\nhbRhtRCRpRvsRgVVVcNHNNNCwLwc\nZtRTRvttWWzBPlGZ\ntcLnctNsJrWWNDTN\npwPPSjHSHHfzvmSvvvFVVGqGVqGmFqrDWgDr\npPSvfPQMzCQCSbhllLnQDhbtQZ\nDmLffDhpVhjjVwvbwNVFbbNSNH\nJRPBgMPRHBrMHMHqrBMqWJBSQQNbCvndNrdvCNCFwFrQnv\nWcqJcPGMGtWRRBtgZjjspGHTLHGHTppm\nptJtWJpqRwDZZDVWpbDWqlvvflfMjlfCMjdCCdtslv\nrLwTBGBzBBQTzmwCCjvdvlLllddsMl\nNBwTmrGNgrTrcgPpWgWPDSVVPW\nCdglMnrlSSqDPpcsZb\nccwmVJtvVvVtNhBpBFPDVpqbbD\nTRGQjJjGTmtrTCgHWLfrcn\nJNNhLwWwWQHNPDmmjHpc\nzMqZCvVCSMVqMSTVvZVGsBnlslpmsmzlPmsHPsPB\nqTVqrgdCCbhfHJQFtg\nwNwCBBCZsfQWfmLCGSmmFRGSSF\nzjnPHPVqMhhZLTcbpbSncp\nlVlhlgzlPZlwtgBddJdfvf\nJWRWRRLWJLnjtjnLzGzznflBvfPvPMqMDqdbzblCzC\nTTScTVbHmTsVFrmcsgcHFlPMMvlvrDPdlrDDqdldvl\nbVpcpchgsFZHbhSmSTsHFFjwtZjnjLttntNjLjNLWtjw\nrffjPJzWzrgPpGWHVNqTtmqFTVRH\ncswhvlLBvSLsCtbFccmqVFNTbb\nwwZSCZSnCLsSDGgDmpGnfmmr\nrTfJTNtjfNljlrWSlzRtNlTqsddwGnsnHHwwhssTsnqw\nVpbpZZbvPLbZbbBhwqMHhsGMnJdVwV\nmgQZJDLBJbbbcbgZClCSfWlrCjRjlDCR\nfSpwcVfzsztcSSWNNMbnMRqTvtTv\nmJFmGDDDhGhBJHCQddllqTvCllqTRRWNnMbT\nFdFDGdDDDhhHdZDjhDmpwSPVZszpwZsVgsPRZs\n";

const rucksacks = puzzleInput.split("\n");
rucksacks.pop();

let sum = 0;

for (let i = 0; i < rucksacks.length; i = i + 3) {
  let first = rucksacks[i];
  let second = rucksacks[i + 1];
  let third = rucksacks[i + 2];

  let badge = first
    .split("")
    .filter((x) => second.includes(x))
    .filter((x) => third.includes(x));

  let priority = getPriority(badge[0]);

  sum = sum + priority;
}

console.log("sum is ", sum);

function getPriority(badge) {
  const alphabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
  let index = alphabet.indexOf(badge);
  return index + 1;
}
